digraph D {
graph [ dpi = 150 ]
nodesep=0.3;
ranksep=0.2;
margin=0.1;
node [shape=box];
edge [arrowsize=0.8];

Genesis [label="Genesis"];
Genesis -> var1;
var1 [label="var1\nType: Int, Value: 8, hasST"];
var1 -> var2;
var2 [label="var2\nType: Int, Value: 5, hasST"];
var2 -> var3;
var3 [label="var3\nType: Int, Value: 3, hasST"];
var3 -> ASSIGN_3;
ASSIGN_3 [label="=\nType: Int"];
ASSIGN_3 -> var4;
var4 [label="var4\nType: Int, hasST"];
ASSIGN_3 -> PLUS_0;
PLUS_0 [label="+\nType: Int"];
PLUS_0 -> var2_0;
var2_0 [label="var2\nType: Int, hasST"];
PLUS_0 -> TIMES0;
TIMES0 [label="*\nType: Int"];
TIMES0 -> var3_1;
var3_1 [label="var3\nType: Int, hasST"];
TIMES0 -> N2_3;
N2_3 [label="2\nType: Int"];
ASSIGN_3 -> iAmAField;
iAmAField [label="iAmAField\nType: Int"];
iAmAField -> main_0;
main_0 [label="main\nType: Void, hasST"];
main_0 -> ASSIGN_4;
ASSIGN_4 [label="=\nType: Int"];
ASSIGN_4 -> w_2;
w_2 [label="w\nType: Int, hasST"];
ASSIGN_4 -> N10_4;
N10_4 [label="10\nType: Int"];
ASSIGN_4 -> ASSIGN_5;
ASSIGN_5 [label="=\nType: Int"];
ASSIGN_5 -> q_3;
q_3 [label="q\nType: Int, hasST"];
ASSIGN_5 -> N0_5;
N0_5 [label="0\nType: Int"];
ASSIGN_5 -> WHILE_0;
WHILE_0 [label="WHILE"];
WHILE_0 -> GTHAN0;
GTHAN0 [label=">\nType: Bool"];
GTHAN0 -> w_4;
w_4 [label="w\nType: Int, hasST"];
GTHAN0 -> N0_6;
N0_6 [label="0\nType: Int"];
WHILE_0 -> WHILE_1;
WHILE_1 [label="WHILE"];
WHILE_1 -> LTHAN1;
LTHAN1 [label="<\nType: Bool"];
LTHAN1 -> q_5;
q_5 [label="q\nType: Int, hasST"];
LTHAN1 -> N10_7;
N10_7 [label="10\nType: Int"];
WHILE_1 -> IF_ELSE_0;
IF_ELSE_0 [label="IF_ELSE"];
IF_ELSE_0 -> IF_0;
IF_0 [label="IF"];
IF_0 -> EQUALS2;
EQUALS2 [label="==\nType: Bool"];
EQUALS2 -> q_6;
q_6 [label="q\nType: Int, hasST"];
EQUALS2 -> N5_8;
N5_8 [label="5\nType: Int"];
IF_0 -> println_C_0;
println_C_0 [label="println, hasST"];
println_C_0 -> q_7;
q_7 [label="q\nType: Int, hasST"];
println_C_0 -> ASSIGN_6;
ASSIGN_6 [label="=\nType: Int"];
ASSIGN_6 -> q_8;
q_8 [label="q\nType: Int, hasST"];
ASSIGN_6 -> PLUS_1;
PLUS_1 [label="+\nType: Int"];
PLUS_1 -> q_9;
q_9 [label="q\nType: Int, hasST"];
PLUS_1 -> N1_9;
N1_9 [label="1\nType: Int"];
ASSIGN_6 -> ASSIGN_7;
ASSIGN_7 [label="=\nType: Int"];
ASSIGN_7 -> m_10;
m_10 [label="m\nType: Int, hasST"];
ASSIGN_7 -> meth_C_1;
meth_C_1 [label="meth, hasST"];
meth_C_1 -> N90_10;
N90_10 [label="90\nType: Int"];
IF_ELSE_0 -> ASSIGN_8;
ASSIGN_8 [label="=\nType: Int"];
ASSIGN_8 -> q_11;
q_11 [label="q\nType: Int, hasST"];
ASSIGN_8 -> PLUS_2;
PLUS_2 [label="+\nType: Int"];
PLUS_2 -> q_12;
q_12 [label="q\nType: Int, hasST"];
PLUS_2 -> N1_11;
N1_11 [label="1\nType: Int"];
WHILE_1 -> ASSIGN_9;
ASSIGN_9 [label="=\nType: Int"];
ASSIGN_9 -> w_13;
w_13 [label="w\nType: Int, hasST"];
ASSIGN_9 -> MINUS_3;
MINUS_3 [label="-\nType: Int"];
MINUS_3 -> w_14;
w_14 [label="w\nType: Int, hasST"];
MINUS_3 -> N1_12;
N1_12 [label="1\nType: Int"];
WHILE_0 -> println_C_2;
println_C_2 [label="println, hasST"];
println_C_2 -> w_15;
w_15 [label="w\nType: Int, hasST"];
println_C_2 -> println_C_3;
println_C_3 [label="println, hasST"];
println_C_3 -> q_16;
q_16 [label="q\nType: Int, hasST"];
println_C_3 -> println_C_4;
println_C_4 [label="println, hasST"];
println_C_4 -> m_17;
m_17 [label="m\nType: Int, hasST"];
main_0 -> meth_1;
meth_1 [label="meth\nType: Int, hasST"];
meth_1 -> ASSIGN_10;
ASSIGN_10 [label="=\nType: Int"];
ASSIGN_10 -> iAmAField_18;
iAmAField_18 [label="iAmAField\nType: Int, hasST"];
ASSIGN_10 -> N5_13;
N5_13 [label="5\nType: Int"];
ASSIGN_10 -> ASSIGN_11;
ASSIGN_11 [label="=\nType: Int"];
ASSIGN_11 -> c_19;
c_19 [label="c\nType: Int, hasST"];
ASSIGN_11 -> N2_14;
N2_14 [label="2\nType: Int"];
ASSIGN_11 -> ASSIGN_12;
ASSIGN_12 [label="=\nType: Int"];
ASSIGN_12 -> p_20;
p_20 [label="p\nType: Int, hasST"];
ASSIGN_12 -> PLUS_4;
PLUS_4 [label="+\nType: Int"];
PLUS_4 -> p_21;
p_21 [label="p\nType: Int, hasST"];
PLUS_4 -> N2_15;
N2_15 [label="2\nType: Int"];
ASSIGN_12 -> RETURN_0;
RETURN_0 [label="RETURN"];
RETURN_0 -> MINUS_8;
MINUS_8 [label="-\nType: Int"];
MINUS_8 -> PLUS_7;
PLUS_7 [label="+\nType: Int"];
PLUS_7 -> PLUS_6;
PLUS_6 [label="+\nType: Int"];
PLUS_6 -> PLUS_5;
PLUS_5 [label="+\nType: Int"];
PLUS_5 -> p_22;
p_22 [label="p\nType: Int, hasST"];
PLUS_5 -> N1_16;
N1_16 [label="1\nType: Int"];
PLUS_6 -> c_23;
c_23 [label="c\nType: Int, hasST"];
PLUS_7 -> var3_24;
var3_24 [label="var3\nType: Int, hasST"];
MINUS_8 -> iAmAField_25;
iAmAField_25 [label="iAmAField\nType: Int, hasST"];

}