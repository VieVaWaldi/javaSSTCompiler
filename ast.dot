digraph D {
graph [ dpi = 150 ]
nodesep=0.3;
ranksep=0.2;
margin=0.1;
node [shape=box];
edge [arrowsize=0.8];

Test [label="Test"];
Test -> var1;
var1 [label="var1\nType: Int, Value: 0, hasST"];
var1 -> var2;
var2 [label="var2\nType: Int, Value: 2, hasST"];
var2 -> ASSIGN_2;
ASSIGN_2 [label="=\nType: Int"];
ASSIGN_2 -> var3;
var3 [label="var3\nType: Int, hasST"];
ASSIGN_2 -> MINUS_0;
MINUS_0 [label="-\nType: Int"];
MINUS_0 -> N127_2;
N127_2 [label="127\nType: Int"];
MINUS_0 -> N10_3;
N10_3 [label="10\nType: Int"];
ASSIGN_2 -> var4;
var4 [label="var4\nType: Int, Value: 3, hasST"];
var4 -> var5;
var5 [label="var5\nType: Int, Value: 100, hasST"];
var5 -> meth1_0;
meth1_0 [label="meth1\nType: Void, hasST"];
meth1_0 -> ASSIGN_5;
ASSIGN_5 [label="=\nType: Int"];
ASSIGN_5 -> a_0;
a_0 [label="a\nType: Int, hasST"];
ASSIGN_5 -> N1_6;
N1_6 [label="1\nType: Int"];
meth1_0 -> meth1_1;
meth1_1 [label="meth1\nType: Int, hasST"];
meth1_1 -> RETURN_0;
RETURN_0 [label="RETURN"];
RETURN_0 -> b_1;
b_1 [label="b\nType: Int, hasST"];
RETURN_0 -> RETURN_1;
RETURN_1 [label="RETURN"];
RETURN_1 -> b_2;
b_2 [label="b\nType: Int, hasST"];
meth1_1 -> meth1_2;
meth1_2 [label="meth1\nType: Void, hasST"];
meth1_2 -> ASSIGN_6;
ASSIGN_6 [label="=\nType: Int"];
ASSIGN_6 -> m1_3;
m1_3 [label="m1\nType: Int, hasST"];
ASSIGN_6 -> var1_4;
var1_4 [label="var1\nType: Int, hasST"];
ASSIGN_6 -> ASSIGN_7;
ASSIGN_7 [label="=\nType: Int"];
ASSIGN_7 -> m3_5;
m3_5 [label="m3\nType: Int, hasST"];
ASSIGN_7 -> meth1_C_0;
meth1_C_0 [label="meth1, hasST"];
meth1_C_0 -> m1_6;
m1_6 [label="m1\nType: Int, hasST"];
ASSIGN_7 -> WHILE_0;
WHILE_0 [label="WHILE"];
WHILE_0 -> LTHAN0;
LTHAN0 [label="<\nType: Bool"];
LTHAN0 -> m1_7;
m1_7 [label="m1\nType: Int, hasST"];
LTHAN0 -> N190_7;
N190_7 [label="190\nType: Int"];
WHILE_0 -> ASSIGN_8;
ASSIGN_8 [label="=\nType: Int"];
ASSIGN_8 -> m1_8;
m1_8 [label="m1\nType: Int, hasST"];
ASSIGN_8 -> PLUS_1;
PLUS_1 [label="+\nType: Int"];
PLUS_1 -> m1_9;
m1_9 [label="m1\nType: Int, hasST"];
PLUS_1 -> N1_8;
N1_8 [label="1\nType: Int"];
ASSIGN_8 -> IF_ELSE_0;
IF_ELSE_0 [label="IF_ELSE"];
IF_ELSE_0 -> IF_0;
IF_0 [label="IF"];
IF_0 -> EQUALS1;
EQUALS1 [label="==\nType: Bool"];
EQUALS1 -> m1_10;
m1_10 [label="m1\nType: Int, hasST"];
EQUALS1 -> N15_9;
N15_9 [label="15\nType: Int"];
IF_0 -> ASSIGN_9;
ASSIGN_9 [label="=\nType: Int"];
ASSIGN_9 -> m3_11;
m3_11 [label="m3\nType: Int, hasST"];
ASSIGN_9 -> PLUS_2;
PLUS_2 [label="+\nType: Int"];
PLUS_2 -> m3_12;
m3_12 [label="m3\nType: Int, hasST"];
PLUS_2 -> N1_10;
N1_10 [label="1\nType: Int"];
IF_ELSE_0 -> ASSIGN_10;
ASSIGN_10 [label="=\nType: Int"];
ASSIGN_10 -> m3_13;
m3_13 [label="m3\nType: Int, hasST"];
ASSIGN_10 -> MINUS_3;
MINUS_3 [label="-\nType: Int"];
MINUS_3 -> m3_14;
m3_14 [label="m3\nType: Int, hasST"];
MINUS_3 -> N1_11;
N1_11 [label="1\nType: Int"];
IF_ELSE_0 -> IF_ELSE_1;
IF_ELSE_1 [label="IF_ELSE"];
IF_ELSE_1 -> IF_1;
IF_1 [label="IF"];
IF_1 -> GTHANOR2;
GTHANOR2 [label=">=\nType: Bool"];
GTHANOR2 -> m3_15;
m3_15 [label="m3\nType: Int, hasST"];
GTHANOR2 -> N5_12;
N5_12 [label="5\nType: Int"];
IF_1 -> RETURN_2;
RETURN_2 [label="RETURN"];
IF_ELSE_1 -> ASSIGN_11;
ASSIGN_11 [label="=\nType: Int"];
ASSIGN_11 -> m2_16;
m2_16 [label="m2\nType: Int, hasST"];
ASSIGN_11 -> MINUS_4;
MINUS_4 [label="-\nType: Int"];
MINUS_4 -> m2_17;
m2_17 [label="m2\nType: Int, hasST"];
MINUS_4 -> N1_13;
N1_13 [label="1\nType: Int"];
WHILE_0 -> meth2_C_1;
meth2_C_1 [label="meth2, hasST"];
meth2_C_1 -> N10_14;
N10_14 [label="10\nType: Int"];
N10_14 -> m1_18;
m1_18 [label="m1\nType: Int, hasST"];
meth2_C_1 -> meth2_C_2;
meth2_C_2 [label="meth2, hasST"];
meth2_C_2 -> PLUS_6;
PLUS_6 [label="+\nType: Int"];
PLUS_6 -> PLUS_5;
PLUS_5 [label="+\nType: Int"];
PLUS_5 -> N1_15;
N1_15 [label="1\nType: Int"];
PLUS_5 -> N2_16;
N2_16 [label="2\nType: Int"];
PLUS_6 -> N3_17;
N3_17 [label="3\nType: Int"];
PLUS_6 -> PLUS_7;
PLUS_7 [label="+\nType: Int"];
PLUS_7 -> QUOT0;
QUOT0 [label="/\nType: Int"];
QUOT0 -> m3_19;
m3_19 [label="m3\nType: Int, hasST"];
QUOT0 -> N10_18;
N10_18 [label="10\nType: Int"];
PLUS_7 -> N5_19;
N5_19 [label="5\nType: Int"];
meth2_C_2 -> ASSIGN_12;
ASSIGN_12 [label="=\nType: Int"];
ASSIGN_12 -> m2_20;
m2_20 [label="m2\nType: Int, hasST"];
ASSIGN_12 -> meth2_C_3;
meth2_C_3 [label="meth2, hasST"];
meth2_C_3 -> meth2_C_4;
meth2_C_4 [label="meth2, hasST"];
meth2_C_4 -> m1_21;
m1_21 [label="m1\nType: Int, hasST"];
m1_21 -> m3_22;
m3_22 [label="m3\nType: Int, hasST"];
meth2_C_4 -> m2_23;
m2_23 [label="m2\nType: Int, hasST"];
meth1_2 -> meth2_3;
meth2_3 [label="meth2\nType: Int, hasST"];
meth2_3 -> RETURN_3;
RETURN_3 [label="RETURN"];
RETURN_3 -> QUOT2;
QUOT2 [label="/\nType: Int"];
QUOT2 -> TIMES1;
TIMES1 [label="*\nType: Int"];
TIMES1 -> N1_20;
N1_20 [label="1\nType: Int"];
TIMES1 -> PLUS_8;
PLUS_8 [label="+\nType: Int"];
PLUS_8 -> N2_21;
N2_21 [label="2\nType: Int"];
PLUS_8 -> N3_22;
N3_22 [label="3\nType: Int"];
QUOT2 -> N4_23;
N4_23 [label="4\nType: Int"];

}