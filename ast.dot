digraph D {
graph [ dpi = 150 ]
nodesep=0.3;
ranksep=0.2;
margin=0.1;
node [shape=box];
edge [arrowsize=0.8];

Genesis [label="Genesis"];
Genesis -> var1;
var1 [label="var1\nType: Int, Value: 8, hasST"];
var1 -> var2;
var2 [label="var2\nType: Int, Value: 5, hasST"];
var2 -> var3;
var3 [label="var3\nType: Int, Value: 3, hasST"];
var3 -> ASSIGN_3;
ASSIGN_3 [label="=\nType: Int"];
ASSIGN_3 -> var4;
var4 [label="var4\nType: Int, hasST"];
ASSIGN_3 -> PLUS_0;
PLUS_0 [label="+\nType: Int"];
PLUS_0 -> var2_0;
var2_0 [label="var2\nType: Int, hasST"];
PLUS_0 -> TIMES0;
TIMES0 [label="*\nType: Int"];
TIMES0 -> var3_1;
var3_1 [label="var3\nType: Int, hasST"];
TIMES0 -> N2_3;
N2_3 [label="2\nType: Int"];
ASSIGN_3 -> iAmAField;
iAmAField [label="iAmAField\nType: Int"];
iAmAField -> main_0;
main_0 [label="main\nType: Void, hasST"];
main_0 -> ASSIGN_4;
ASSIGN_4 [label="=\nType: Int"];
ASSIGN_4 -> s_2;
s_2 [label="s\nType: Int, hasST"];
ASSIGN_4 -> N10_4;
N10_4 [label="10\nType: Int"];
ASSIGN_4 -> IF_ELSE_1;
IF_ELSE_1 [label="IF_ELSE"];
IF_ELSE_1 -> IF_0;
IF_0 [label="IF"];
IF_0 -> LTHAN0;
LTHAN0 [label="<\nType: Bool"];
LTHAN0 -> s_3;
s_3 [label="s\nType: Int, hasST"];
LTHAN0 -> N11_5;
N11_5 [label="11\nType: Int"];
IF_0 -> IF_ELSE_0;
IF_ELSE_0 [label="IF_ELSE"];
IF_ELSE_0 -> IF_1;
IF_1 [label="IF"];
IF_1 -> GTHAN1;
GTHAN1 [label=">\nType: Bool"];
GTHAN1 -> s_4;
s_4 [label="s\nType: Int, hasST"];
GTHAN1 -> N9_6;
N9_6 [label="9\nType: Int"];
IF_1 -> ASSIGN_5;
ASSIGN_5 [label="=\nType: Int"];
ASSIGN_5 -> s_5;
s_5 [label="s\nType: Int, hasST"];
ASSIGN_5 -> meth_C_0;
meth_C_0 [label="meth, hasST"];
meth_C_0 -> N1_7;
N1_7 [label="1\nType: Int"];
IF_ELSE_0 -> ASSIGN_6;
ASSIGN_6 [label="=\nType: Int"];
ASSIGN_6 -> s_6;
s_6 [label="s\nType: Int, hasST"];
ASSIGN_6 -> N2_8;
N2_8 [label="2\nType: Int"];
IF_ELSE_1 -> ASSIGN_7;
ASSIGN_7 [label="=\nType: Int"];
ASSIGN_7 -> s_7;
s_7 [label="s\nType: Int, hasST"];
ASSIGN_7 -> N4_9;
N4_9 [label="4\nType: Int"];
IF_ELSE_1 -> println_C_1;
println_C_1 [label="println, hasST"];
println_C_1 -> s_8;
s_8 [label="s\nType: Int, hasST"];
println_C_1 -> RETURN_0;
RETURN_0 [label="RETURN"];
main_0 -> meth_1;
meth_1 [label="meth\nType: Int, hasST"];
meth_1 -> ASSIGN_8;
ASSIGN_8 [label="=\nType: Int"];
ASSIGN_8 -> iAmAField_9;
iAmAField_9 [label="iAmAField\nType: Int, hasST"];
ASSIGN_8 -> N5_10;
N5_10 [label="5\nType: Int"];
ASSIGN_8 -> ASSIGN_9;
ASSIGN_9 [label="=\nType: Int"];
ASSIGN_9 -> c_10;
c_10 [label="c\nType: Int, hasST"];
ASSIGN_9 -> N2_11;
N2_11 [label="2\nType: Int"];
ASSIGN_9 -> ASSIGN_10;
ASSIGN_10 [label="=\nType: Int"];
ASSIGN_10 -> p_11;
p_11 [label="p\nType: Int, hasST"];
ASSIGN_10 -> PLUS_1;
PLUS_1 [label="+\nType: Int"];
PLUS_1 -> p_12;
p_12 [label="p\nType: Int, hasST"];
PLUS_1 -> N2_12;
N2_12 [label="2\nType: Int"];
ASSIGN_10 -> RETURN_1;
RETURN_1 [label="RETURN"];
RETURN_1 -> MINUS_5;
MINUS_5 [label="-\nType: Int"];
MINUS_5 -> PLUS_4;
PLUS_4 [label="+\nType: Int"];
PLUS_4 -> PLUS_3;
PLUS_3 [label="+\nType: Int"];
PLUS_3 -> PLUS_2;
PLUS_2 [label="+\nType: Int"];
PLUS_2 -> p_13;
p_13 [label="p\nType: Int, hasST"];
PLUS_2 -> N1_13;
N1_13 [label="1\nType: Int"];
PLUS_3 -> c_14;
c_14 [label="c\nType: Int, hasST"];
PLUS_4 -> var3_15;
var3_15 [label="var3\nType: Int, hasST"];
MINUS_5 -> iAmAField_16;
iAmAField_16 [label="iAmAField\nType: Int, hasST"];

}